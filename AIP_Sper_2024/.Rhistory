labs(linetype = "Hypothesis")+
geom_segment(aes( x=-result$s*result$z, xend=-result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
geom_segment(aes( x=result$s*result$z, xend=result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
#geom_segment(aes( x=c(-result$s*result$z,result$s*result$z),
#                  xend=c(-result$s*result$z,result$s*result$z),
#                  y=c(0,0),
#                  yend=c(dnorm(-result$s*result$z, mean = 0, sd = result$s),
#                        dnorm(result$s*result$z, mean = 0, sd = result$s))))+
#geom_segment(aes(x=result$s*result$z, xend=result$s*result$z,
#                 y=dnorm(result$s*result$z, mean = 0, sd = result$s),
#                 yend=dnorm(result$s*result$z, mean = d, sd = result$s)))+
#geom_segment(aes( x=d, xend=d,
#  y=0, yend=dnorm(d, mean = d, sd = result$s)),
#linetype=2, col="black")+
theme(#axis.title.y = element_blank(),
#axis.line.y = element_blank(),
axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
text=element_text(size=14),
legend.position.inside = c(.9,.8),legend.key.width = unit(1, "cm")) +
annotation_custom(grob1.1) + annotation_custom(grob1.2) + annotation_custom(grob1.3)+
annotate(geom = "segment",
x = 0.902,
y = .4,
xend = 0.902,
yend = 0.1,
colour = "red",
arrow = arrow(length = unit(0.3, "cm"), type = "closed"))+
labs(caption="\\textit{critical level of significance $=.05$}")
ggplot(data.frame(x = c(-1.25, 1.5)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = result$s),
aes(linetype = "$H_0$"), size = 1.1, n=1000)+
#stat_function(fun = dnorm, args = list(mean = d, sd = result$s),
#              aes(linetype="$H_1$"), size = 1.1,n=1000)+
#scale_linetype_manual(values=c("solid", "dotted"))+
scale_linetype_manual(values=c("solid")) +
scale_x_continuous(breaks=seq(-1,1.2, by=.20),name = "Cohen's \\textit{d}") +
scale_y_continuous(name = "Probability Density")+
labs(linetype = "Hypothesis")+
geom_segment(aes( x=-result$s*result$z, xend=-result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
geom_segment(aes( x=result$s*result$z, xend=result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
#geom_segment(aes( x=c(-result$s*result$z,result$s*result$z),
#                  xend=c(-result$s*result$z,result$s*result$z),
#                  y=c(0,0),
#                  yend=c(dnorm(-result$s*result$z, mean = 0, sd = result$s),
#                        dnorm(result$s*result$z, mean = 0, sd = result$s))))+
#geom_segment(aes(x=result$s*result$z, xend=result$s*result$z,
#                 y=dnorm(result$s*result$z, mean = 0, sd = result$s),
#                 yend=dnorm(result$s*result$z, mean = d, sd = result$s)))+
#geom_segment(aes( x=d, xend=d,
#  y=0, yend=dnorm(d, mean = d, sd = result$s)),
#linetype=2, col="black")+
theme(#axis.title.y = element_blank(),
#axis.line.y = element_blank(),
axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
text=element_text(size=14),
legend.position.inside = c(.9,.8),legend.key.width = unit(1, "cm")) +
annotation_custom(grob1.1) + annotation_custom(grob1.2) + annotation_custom(grob1.3)+
#       annotate(geom = "segment",
# x = 0.902,
# y = .4,
# xend = 0.902,
# yend = 0.1,
# colour = "red",
# arrow = arrow(length = unit(0.3, "cm"), type = "closed"))+
labs(caption="\\textit{critical level of significance $=.05$}")
#| echo: false
#| results: markup
#| warning: false
library(ggplot2)
library(grid)
# nel mio caso m.inn è il trad e m.trad è inn
m.inn<-114 ; sd.inn<-15 ; n.inn<-25
m.trad<-100 ; sd.trad<-16 ; n.trad<-25
df<-(n.inn+n.trad-2)
#
(obs_d <- (m.inn-m.trad) / sqrt( ( (n.inn-1)*sd.inn^2 +  (n.trad-1)*sd.trad^2 ) / (n.inn+n.trad-2) ) )
(obs_t = obs_d / sqrt  ( (n.inn+n.trad) / (n.inn*n.trad) * (n.inn+n.trad) / (df) ))
(obs_p=pt(-abs(obs_t),df)*2)
#obs_d
#[1] 0.9027562
#> obs_t
#[1] 3.127239
#> obs_p
#[1] 0.002995689
#> df
#[1] 48
#
# funzione utile
dpsm <- function(d, ng, alpha=.05, n.sims=10000){
A=d
s=sqrt(2/ng)
df=ng*2-2
z <- qt(1-alpha/2, df)
p.hi <- 1 - pt(z-A/s, df)
p.lo <- pt(-z-A/s, df)
power <- p.hi + p.lo
typeS <- p.lo/power
estimate <- A + s*rt(n.sims,df)
significant <- abs(estimate) > s*z
exaggeration <- mean(abs(estimate)[significant])/A
return(list(power=power, typeS=typeS, exaggeration=exaggeration,
s=s, z=z))
}
power<-function(x) {
y<-dnorm(x, mean = d, sd = result$s)
y[x>(-result$s*result$z) & x < result$s*result$z]<-NA
return(y)}
result<-dpsm(.2, 25)
d<-.20
lab1="Rifiuto $H_0$"
grob1.1 <- grobTree(textGrob("Reject $H_0$", x=.76,  y=0.4+.1, hjust=0,
gp=gpar(col="blue", fontsize=13)))
grob1.2 <- grobTree(textGrob("Reject $H_0$", x=.1-.05,  y=0.4+.1, hjust=0,
gp=gpar(col="blue", fontsize=13)))
grob1.3 <- grobTree(textGrob("Not reject $H_0$", x=.35+.02,  y=0.4+.1, hjust=0,
gp=gpar(col="blue", fontsize=13)))
ggplot(data.frame(x = c(-1.25, 1.5)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = result$s),
aes(linetype = "$H_0$"), size = 1.1, n=1000)+
#stat_function(fun = dnorm, args = list(mean = d, sd = result$s),
#              aes(linetype="$H_1$"), size = 1.1,n=1000)+
#scale_linetype_manual(values=c("solid", "dotted"))+
scale_linetype_manual(values=c("solid")) +
scale_x_continuous(breaks=seq(-1,1.2, by=.20),name = "Cohen's \\textit{d}") +
scale_y_continuous(name = "Probability Density")+
labs(linetype = "Hypothesis")+
geom_segment(aes( x=-result$s*result$z, xend=-result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
geom_segment(aes( x=result$s*result$z, xend=result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
#geom_segment(aes( x=c(-result$s*result$z,result$s*result$z),
#                  xend=c(-result$s*result$z,result$s*result$z),
#                  y=c(0,0),
#                  yend=c(dnorm(-result$s*result$z, mean = 0, sd = result$s),
#                        dnorm(result$s*result$z, mean = 0, sd = result$s))))+
#geom_segment(aes(x=result$s*result$z, xend=result$s*result$z,
#                 y=dnorm(result$s*result$z, mean = 0, sd = result$s),
#                 yend=dnorm(result$s*result$z, mean = d, sd = result$s)))+
#geom_segment(aes( x=d, xend=d,
#  y=0, yend=dnorm(d, mean = d, sd = result$s)),
#linetype=2, col="black")+
theme(#axis.title.y = element_blank(),
#axis.line.y = element_blank(),
axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
text=element_text(size=14),
legend.position.inside = c(.9,.8),legend.key.width = unit(1, "cm")) +
annotation_custom(grob1.1) + annotation_custom(grob1.2) + annotation_custom(grob1.3)+
#       annotate(geom = "segment",
# x = 0.902,
# y = .4,
# xend = 0.902,
# yend = 0.1,
# colour = "red",
# arrow = arrow(length = unit(0.3, "cm"), type = "closed"))+
labs(caption="\\textit{critical level of significance $=.05$}")
#stat_function(fun=power, geom="area", fill="#84CA72", alpha=0.2,n=1000)
rm(list=ls)
rm(list=ls())
library(ggplot2)
library(grid)
# nel mio caso m.inn è il trad e m.trad è inn
m.inn<-114 ; sd.inn<-15 ; n.inn<-25
m.trad<-100 ; sd.trad<-16 ; n.trad<-25
df<-(n.inn+n.trad-2)
#
(obs_d <- (m.inn-m.trad) / sqrt( ( (n.inn-1)*sd.inn^2 +  (n.trad-1)*sd.trad^2 ) / (n.inn+n.trad-2) ) )
(obs_t = obs_d / sqrt  ( (n.inn+n.trad) / (n.inn*n.trad) * (n.inn+n.trad) / (df) ))
(obs_p=pt(-abs(obs_t),df)*2)
# funzione utile
dpsm <- function(d, ng, alpha=.05, n.sims=10000){
A=d
s=sqrt(2/ng)
df=ng*2-2
z <- qt(1-alpha/2, df)
p.hi <- 1 - pt(z-A/s, df)
p.lo <- pt(-z-A/s, df)
power <- p.hi + p.lo
typeS <- p.lo/power
estimate <- A + s*rt(n.sims,df)
significant <- abs(estimate) > s*z
exaggeration <- mean(abs(estimate)[significant])/A
return(list(power=power, typeS=typeS, exaggeration=exaggeration,
s=s, z=z))
}
power<-function(x) {
y<-dnorm(x, mean = d, sd = result$s)
y[x>(-result$s*result$z) & x < result$s*result$z]<-NA
return(y)}
result<-dpsm(.2, 25)
d<-.20
lab1="Rifiuto $H_0$"
grob1.1 <- grobTree(textGrob("Reject $H_0$", x=.76,  y=0.4+.1, hjust=0,
gp=gpar(col="blue", fontsize=13)))
grob1.2 <- grobTree(textGrob("Reject $H_0$", x=.1-.05,  y=0.4+.1, hjust=0,
gp=gpar(col="blue", fontsize=13)))
grob1.3 <- grobTree(textGrob("Not reject $H_0$", x=.35+.02,  y=0.4+.1, hjust=0,
gp=gpar(col="blue", fontsize=13)))
ggplot(data.frame(x = c(-1.25, 1.5)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = result$s),
aes(linetype = "$H_0$"), size = 1.1, n=1000)+
#stat_function(fun = dnorm, args = list(mean = d, sd = result$s),
#              aes(linetype="$H_1$"), size = 1.1,n=1000)+
#scale_linetype_manual(values=c("solid", "dotted"))+
scale_linetype_manual(values=c("solid")) +
scale_x_continuous(breaks=seq(-1,1.2, by=.20),name = "Cohen's \\textit{d}") +
scale_y_continuous(name = "Probability Density")+
labs(linetype = "Hypothesis")+
geom_segment(aes( x=-result$s*result$z, xend=-result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
geom_segment(aes( x=result$s*result$z, xend=result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
#geom_segment(aes( x=c(-result$s*result$z,result$s*result$z),
#                  xend=c(-result$s*result$z,result$s*result$z),
#                  y=c(0,0),
#                  yend=c(dnorm(-result$s*result$z, mean = 0, sd = result$s),
#                        dnorm(result$s*result$z, mean = 0, sd = result$s))))+
#geom_segment(aes(x=result$s*result$z, xend=result$s*result$z,
#                 y=dnorm(result$s*result$z, mean = 0, sd = result$s),
#                 yend=dnorm(result$s*result$z, mean = d, sd = result$s)))+
#geom_segment(aes( x=d, xend=d,
#  y=0, yend=dnorm(d, mean = d, sd = result$s)),
#linetype=2, col="black")+
theme(#axis.title.y = element_blank(),
#axis.line.y = element_blank(),
axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
text=element_text(size=14),
legend.position.inside = c(.9,.8),legend.key.width = unit(1, "cm")) +
annotation_custom(grob1.1) + annotation_custom(grob1.2) + annotation_custom(grob1.3)+
#       annotate(geom = "segment",
# x = 0.902,
# y = .4,
# xend = 0.902,
# yend = 0.1,
# colour = "red",
# arrow = arrow(length = unit(0.3, "cm"), type = "closed"))+
labs(caption="\\textit{critical level of significance $=.05$}")
rm(list=ls())
library(ggplot2)
library(grid)
# nel mio caso m.inn è il trad e m.trad è inn
m.inn<-114 ; sd.inn<-15 ; n.inn<-25
m.trad<-100 ; sd.trad<-16 ; n.trad<-25
df<-(n.inn+n.trad-2)
#
(obs_d <- (m.inn-m.trad) / sqrt( ( (n.inn-1)*sd.inn^2 +  (n.trad-1)*sd.trad^2 ) / (n.inn+n.trad-2) ) )
(obs_t = obs_d / sqrt  ( (n.inn+n.trad) / (n.inn*n.trad) * (n.inn+n.trad) / (df) ))
(obs_p=pt(-abs(obs_t),df)*2)
# funzione utile
dpsm <- function(d, ng, alpha=.05, n.sims=10000){
A=d
s=sqrt(2/ng)
df=ng*2-2
z <- qt(1-alpha/2, df)
p.hi <- 1 - pt(z-A/s, df)
p.lo <- pt(-z-A/s, df)
power <- p.hi + p.lo
typeS <- p.lo/power
estimate <- A + s*rt(n.sims,df)
significant <- abs(estimate) > s*z
exaggeration <- mean(abs(estimate)[significant])/A
return(list(power=power, typeS=typeS, exaggeration=exaggeration,
s=s, z=z))
}
power<-function(x) {
y<-dnorm(x, mean = d, sd = result$s)
y[x>(-result$s*result$z) & x < result$s*result$z]<-NA
return(y)}
result<-dpsm(.2, 25)
d<-.20
lab1="Rifiuto $H_0$"
grob1.1 <- grobTree(textGrob("Reject $H_0$", x=.76,  y=0.4+.1, hjust=0,
gp=gpar(col="blue", fontsize=13)))
grob1.2 <- grobTree(textGrob("Reject $H_0$", x=.1-.05,  y=0.4+.1, hjust=0,
gp=gpar(col="blue", fontsize=13)))
grob1.3 <- grobTree(textGrob("Not reject $H_0$", x=.35+.02,  y=0.4+.1, hjust=0,
gp=gpar(col="blue", fontsize=13)))
ggplot(data.frame(x = c(-1.25, 1.5)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = result$s),
aes(linetype = "$H_0$"), size = 1.1, n=1000)+
#stat_function(fun = dnorm, args = list(mean = d, sd = result$s),
#              aes(linetype="$H_1$"), size = 1.1,n=1000)+
#scale_linetype_manual(values=c("solid", "dotted"))+
scale_linetype_manual(values=c("solid")) +
scale_x_continuous(breaks=seq(-1,1.2, by=.20),name = "Cohen's \\textit{d}") +
scale_y_continuous(name = "Probability Density")+
labs(linetype = "Hypothesis")+
geom_segment(aes( x=-result$s*result$z, xend=-result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
geom_segment(aes( x=result$s*result$z, xend=result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
#geom_segment(aes( x=c(-result$s*result$z,result$s*result$z),
#                  xend=c(-result$s*result$z,result$s*result$z),
#                  y=c(0,0),
#                  yend=c(dnorm(-result$s*result$z, mean = 0, sd = result$s),
#                        dnorm(result$s*result$z, mean = 0, sd = result$s))))+
#geom_segment(aes(x=result$s*result$z, xend=result$s*result$z,
#                 y=dnorm(result$s*result$z, mean = 0, sd = result$s),
#                 yend=dnorm(result$s*result$z, mean = d, sd = result$s)))+
#geom_segment(aes( x=d, xend=d,
#  y=0, yend=dnorm(d, mean = d, sd = result$s)),
#linetype=2, col="black")+
theme(#axis.title.y = element_blank(),
#axis.line.y = element_blank(),
axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
text=element_text(size=14),
legend.position.inside = c(.9,.8),legend.key.width = unit(1, "cm")) +
annotation_custom(grob1.1) + annotation_custom(grob1.2) + annotation_custom(grob1.3)+
#       annotate(geom = "segment",
# x = 0.902,
# y = .4,
# xend = 0.902,
# yend = 0.1,
# colour = "red",
# arrow = arrow(length = unit(0.3, "cm"), type = "closed"))+
labs(caption="\\textit{critical level of significance $=.05$}")
ggplot(data.frame(x = c(-1.25, 1.5)), aes(x = x)) + theme_bw()+
stat_function(fun = dnorm, args = list(mean = 0, sd = result$s),
aes(linetype = "$H_0$"), size = 1.1, n=1000)+
#stat_function(fun = dnorm, args = list(mean = d, sd = result$s),
#              aes(linetype="$H_1$"), size = 1.1,n=1000)+
#scale_linetype_manual(values=c("solid", "dotted"))+
scale_linetype_manual(values=c("solid")) +
scale_x_continuous(breaks=seq(-1,1.2, by=.20),name = "Cohen's \\textit{d}") +
scale_y_continuous(name = "Probability Density")+
labs(linetype = "Hypothesis")+
geom_segment(aes( x=-result$s*result$z, xend=-result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
geom_segment(aes( x=result$s*result$z, xend=result$s*result$z,
y=0, yend=dnorm(d, mean = d, sd = result$s)),color="blue",linetype="dotted",size=2)+
#geom_segment(aes( x=c(-result$s*result$z,result$s*result$z),
#                  xend=c(-result$s*result$z,result$s*result$z),
#                  y=c(0,0),
#                  yend=c(dnorm(-result$s*result$z, mean = 0, sd = result$s),
#                        dnorm(result$s*result$z, mean = 0, sd = result$s))))+
#geom_segment(aes(x=result$s*result$z, xend=result$s*result$z,
#                 y=dnorm(result$s*result$z, mean = 0, sd = result$s),
#                 yend=dnorm(result$s*result$z, mean = d, sd = result$s)))+
#geom_segment(aes( x=d, xend=d,
#  y=0, yend=dnorm(d, mean = d, sd = result$s)),
#linetype=2, col="black")+
theme(#axis.title.y = element_blank(),
#axis.line.y = element_blank(),
axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
text=element_text(size=14),
legend.position.inside = c(.9,.8),legend.key.width = unit(1, "cm")) +
annotation_custom(grob1.1) + annotation_custom(grob1.2) + annotation_custom(grob1.3)+
#       annotate(geom = "segment",
# x = 0.902,
# y = .4,
# xend = 0.902,
# yend = 0.1,
# colour = "red",
# arrow = arrow(length = unit(0.3, "cm"), type = "closed"))+
labs(caption="\\textit{critical level of significance $=.05$}")
#stat_function(fun=power, geom="area", fill="#84CA72", alpha=0.2,n=1000)
n <- 30
library(criticalESvalue)
output <- critical_t2sp(n = n, conf.level = 0.95, hypothesis = "two.sided")
output
L <- capture.output(output)
L
critical_cor(n = seq(3, 1000, by = .3))$rc
n = seq (3, 1000, by = .3)
plot(n, critical_cor(n = n)$rc)
plot(n, critical_cor(n = n)$rc, type = "l")
plot(n, critical_cor(n = n)$rc, type = "l", ylim = 0:1)
set.seed(20131129)
n1 <- 18; n2 <- 1000
R1 <- matrix(c(1,.4,.4,1),2,2)
data1 <- data.frame(mvrnorm(n1,c(0,0),R1,empirical=TRUE))
library(MASS)
library(ggplot2)
set.seed(20131129)
n1 <- 18; n2 <- 1000
R1 <- matrix(c(1,.4,.4,1),2,2)
data1 <- data.frame(mvrnorm(n1,c(0,0),R1,empirical=TRUE))
colnames(data1) <- c("y","x")
data1$n <- n1
R2 <- matrix(c(1,.08,.08,1),2,2)
data2 <- data.frame(mvrnorm(n2,c(0,0),R2,empirical=TRUE))
colnames(data2) <- c("y","x")
data2$n <- n2
myData <- rbind(data1,data2)
myData$n <- factor(paste0("n = ",myData$n),
levels=paste0("n = ",unique(myData$n)))
addText <- data.frame(n=unique(myData$n),x=2,y=-3,
label = c("r = .4, p = .1","r = .08, p = .01"))
ggplot(myData,aes(x,y)) + facet_wrap(~n) + geom_point() +
geom_text(aes(x,y,label=label), data = addText )
ggplot(myData,aes(x,y)) + facet_wrap(~n) + geom_point() +
geom_text(aes(x,y,label=label), data = addText, size.unit = 15)
ggplot(myData,aes(x,y)) + facet_wrap(~n) + geom_point() +
geom_text(aes(x,y,label=label), data = addText, size = 15)
ggplot(myData,aes(x,y)) + facet_wrap(~n) + geom_point() +
geom_text(aes(x,y,label=label), data = addText, size = 4)
ggplot(myData,aes(x,y)) + facet_wrap(~n) + geom_point() +
geom_text(aes(x,y,label=label), data = addText, size = 6)
ggplot(myData,aes(x,y)) + facet_wrap(~n) + geom_point() +
geom_text(aes(x,y,label=label), data = addText, size = 6) +
theme(
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15),  # Adjust axis title size
plot.title = element_text(size = 20),
legend.text = element_text(size = 15),  # Adjust legend text size
legend.title = element_text(size = 15),  # Adjust legend title size
legend.position = "right"  # Place the legend on the right side
)
cor.test(data1$x, data2$y)
data1
cor.test(data1$x, data1$y)
R1 <- matrix(c(1,.08,.08,1),2,2)
data1 <- data.frame(mvrnorm(n1,c(0,0),R1,empirical=TRUE))
colnames(data1) <- c("y","x")
data1$n <- n1
cor.test(data1$x, data1$y)
R2 <- matrix(c(1,.4,.4,1),2,2)
data2 <- data.frame(mvrnorm(n2,c(0,0),R2,empirical=TRUE))
colnames(data2) <- c("y","x")
data2$n <- n2
cor.test(data2$x, data2$y)
rm(list = ls())
library(MASS)
library(ggplot2)
set.seed(20131129)
n1 <- 18; n2 <- 1000
R1 <- matrix(c(1,.08,.08,1),2,2)
data1 <- data.frame(mvrnorm(n1,c(0,0),R1,empirical=TRUE))
colnames(data1) <- c("y","x")
data1$n <- n1
R2 <- matrix(c(1,.4,.4,1),2,2)
data2 <- data.frame(mvrnorm(n2,c(0,0),R2,empirical=TRUE))
colnames(data2) <- c("y","x")
data2$n <- n2
myData <- rbind(data1,data2)
myData$n <- factor(paste0("n = ",myData$n),
levels=paste0("n = ",unique(myData$n)))
addText <- data.frame(n=unique(myData$n),x=2,y=-3,
label = c("r = .08, p = .57","r = .08, p < .001"))
cor.test(data2$x, data2$y)
ggplot(myData,aes(x,y)) + facet_wrap(~n) + geom_point() +
geom_text(aes(x,y,label=label), data = addText, size = 6 )
?plot
library(criticalESvalue)
n = seq (3, 1000, by = .3)
plot(n, critical_cor(n = n)$rc, type = "l", ylim = 0:1, xlab = "sample size", ylab = "critical correlation", cex = 1.5)
plot(n, critical_cor(n = n)$rc, type = "l", ylim = 0:1, xlab = "sample size", ylab = "critical correlation", cex = 3)
plot(n, critical_cor(n = n)$rc, type = "l", ylim = 0:1, xlab = "sample size", ylab = "critical correlation", cex.axis = 3)
plot(n, critical_cor(n = n)$rc, type = "l", ylim = 0:1, xlab = "sample size", ylab = "critical correlation", cex.lab = 1.5)
plot(n, critical_cor(n = n)$rc, type = "l", ylim = 0:1, xlab = "sample size", ylab = "critical correlation", cex.lab = 1.5, lwd = 1.5)
plot(n, critical_cor(n = n)$rc, type = "l", ylim = 0:1, xlab = "sample size", ylab = "critical correlation", cex.lab = 1.5, lwd = 2)
dd <- data.frame(n, y = critical_cor(n = n)$rc)
n = seq (3, 1000, by = .3)
dd <- data.frame(n, y = critical_cor(n = n)$rc)
ggplot(dd, aes(x = n, y = y))
ggplot(dd, aes(x = n, y = y)) +
geom_line()
ggplot(dd, aes(x = n, y = y)) +
geom_line() +
ylim(c(0, 1))
ggplot(dd, aes(x = n, y = y)) +
geom_line() +
ylim(c(0, 1))
install.packages("latex2exp")
ggplot(dd, aes(x = n, y = y)) +
geom_line() +
ylim(c(0, 1)) +
ylab(latex2exp::TeX("Critical $\\rho$"))
ggplot(dd, aes(x = n, y = y)) +
geom_line() +
ylim(c(0, 1)) +
ylab(latex2exp::TeX("Critical $\\rho$")) +
xlab("Sample size")
mtheme <- function(){
theme_minimal(15)
}
theme_set(mtheme())
rm(list = ls())
x <- rnorm(150, mean = 10, sd = 4)
y <- x*.95 + rnorm(150, mean = 0, sd = .5)
cor(x,y)
y <- x*.95 + rnorm(150, mean = 0, sd = 3)
cor(x,y)
y <- x*.95 + rnorm(150, mean = 2, sd = 3)
cor(x,y)
y <- x*.95 + rnorm(150, mean = 2, sd = 10)
cor(x,y)
y <- x*.5 + rnorm(150, mean = 2, sd = 20)
z <-
cor(x,y)
y <- x*.5 + rnorm(150, mean = 2, sd = 15)
cor(x,y)
z <- runif(150, min = 5, max = 15)
k <- z*2 + rnorm(150, mean = 4, sd = 2)
data.frame(x,y,z,k)
df_sim <- data.frame(x,y,z,k)
library(writexl)
getwd()
write_xlsx(df_sim, df_sim)
write_xlsx(df_sim, /Users/ambraperugini/Library/CloudStorage/OneDrive-UniversitàdegliStudidiPadova/Lavoro/Conferences_2024/Presentazioni/AIP_Sper/df_sim)
write_xlsx(df_sim, "/Users/ambraperugini/Library/CloudStorage/OneDrive-UniversitàdegliStudidiPadova/Lavoro/Conferences_2024/Presentazioni/AIP_Sper/df_sim")
str(df_sim)
